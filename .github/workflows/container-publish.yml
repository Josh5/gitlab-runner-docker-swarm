name: Publish

on:
  workflow_dispatch:
  push:
    branches: ["feature-**", "fix-**", "staging", "master"]
  schedule:
    # At 02:30 on Saturday
    - cron: "30 2 * * 6"

jobs:
  build-docker-image:
    name: Build Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service_name: ["gitlab-runner-dind-manager", "gitlab-runner-manager"]

    steps:
      # ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 #v3.8.0

      # ---
      - name: Prepare
        if: success()
        id: prepare
        run: |
          echo "GITHUB_REF:${GITHUB_REF}"
          echo "GITHUB_REPOSITORY:${GITHUB_REPOSITORY}"
          VERSION_TAG=${GITHUB_REF#refs/*/}
          SHA_SHORT="${GITHUB_SHA::7}"
          ORG=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          BUILD_DATE="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

          SERVICE_NAME="${{ matrix.service_name }}"
          GHCR_IMAGE=ghcr.io/${ORG:?}/${SERVICE_NAME:?}

          DOCKER_TAGS=""
          if [[ ${GITHUB_REF} == refs/heads/master ]]; then
            DOCKER_TAGS="${GHCR_IMAGE}:latest,"
          elif [[ ${GITHUB_REF} == refs/heads/staging ]]; then
            DOCKER_TAGS="${GHCR_IMAGE}:staging,"
          elif [[ ${GITHUB_REF} == refs/heads/dev-* ]]; then
            DOCKER_TAGS="${GHCR_IMAGE}:${VERSION_TAG},"
          elif [[ ${GITHUB_REF} == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            if [[ ${VERSION} =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}[-\w]*$ ]]; then
              DOCKER_TAGS="${GHCR_IMAGE}:${VERSION},"
              DOCKER_TAGS="${GHCR_IMAGE}:latest,"
            fi
          elif [[ ${GITHUB_REF} == refs/pull/* ]]; then
            PR_NUMBER=$(echo ${GITHUB_REF} | cut -d'/' -f3)
            # For PR builds, only tag the GHCR image.
            DOCKER_TAGS="${GHCR_IMAGE}:pr-${PR_NUMBER},"
          fi

          DOCKER_PUSH="true"

          echo "ghcr_image:${GHCR_IMAGE:?}"
          echo "ghcr_image=${GHCR_IMAGE:?}" >> $GITHUB_OUTPUT

          echo "sha_short:${SHA_SHORT:?}"
          echo "sha_short=${SHA_SHORT:?}" >> $GITHUB_OUTPUT

          echo "service_name:${SERVICE_NAME:?}"
          echo "service_name=${SERVICE_NAME:?}" >> $GITHUB_OUTPUT

          echo "docker_image:${GHCR_IMAGE:?}"
          echo "docker_image=${GHCR_IMAGE:?}" >> $GITHUB_OUTPUT

          echo "docker_tags:$(echo ${DOCKER_TAGS} | sed 's/,$//')"
          echo "docker_tags=$(echo ${DOCKER_TAGS} | sed 's/,$//')" >> $GITHUB_OUTPUT

          echo "docker_push:${DOCKER_PUSH:?}"
          echo "docker_push=${DOCKER_PUSH:?}" >> $GITHUB_OUTPUT

          echo "docker_build_date:${BUILD_DATE:?}" 
          echo "docker_build_date=${BUILD_DATE:?}" >> $GITHUB_OUTPUT

      # ---
      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 #v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ---
      - name: Extract Container metadata
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 #v5.6.1
        with:
          images: ${{ steps.prepare.outputs.docker_image }}
          labels: |
            maintainer=Josh.5
            source.version=${{ steps.prepare.outputs.sha_short }}
            source.project=gitlab-runner-docker-swarm
            source.service=${{ steps.prepare.outputs.service_name }}
            org.opencontainers.image.title=${{ steps.prepare.outputs.service_name }}
            org.opencontainers.image.created=${{ steps.prepare.outputs.docker_build_date }}

      # ---
      - name: Build and push Container image
        uses: docker/build-push-action@b32b51a8eda65d6793cd0494a773d4f6bcef32dc #v6.11.0
        with:
          context: docker/${{ steps.prepare.outputs.service_name }}
          file: docker/${{ steps.prepare.outputs.service_name }}/Dockerfile
          platforms: linux/amd64
          pull: "true"
          push: ${{ steps.prepare.outputs.docker_push }}
          tags: |
            ${{ steps.prepare.outputs.docker_tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ steps.prepare.outputs.service_name }}-main
          cache-to: type=gha,scope=${{ steps.prepare.outputs.service_name }}-main,mode=max

  build-swarm-stack-templates:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: ["build-docker-image"]
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Publish Swarm Template
        uses: Josh5/action.publish-swarm-stack@4392d434d4cfc8df552c7e92cf063428343f96d2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          templates_path: docker-swarm-templates
          branch_name: release/latest
